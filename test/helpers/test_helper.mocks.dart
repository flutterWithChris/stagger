// Mocks generated by Mockito 5.4.4 from annotations
// in buoy/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:buoy/features/subscription/data/data_sources/subscription_data_source.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:purchases_flutter/purchases_flutter.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeLogInResult_0 extends _i1.SmartFake implements _i2.LogInResult {
  _FakeLogInResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCustomerInfo_1 extends _i1.SmartFake implements _i2.CustomerInfo {
  _FakeCustomerInfo_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOfferings_2 extends _i1.SmartFake implements _i2.Offerings {
  _FakeOfferings_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SubscriptionDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockSubscriptionDataSource extends _i1.Mock
    implements _i3.SubscriptionDataSource {
  MockSubscriptionDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> initialize(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [userId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.LogInResult> logIn(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #logIn,
          [userId],
        ),
        returnValue: _i4.Future<_i2.LogInResult>.value(_FakeLogInResult_0(
          this,
          Invocation.method(
            #logIn,
            [userId],
          ),
        )),
      ) as _i4.Future<_i2.LogInResult>);

  @override
  _i4.Future<_i2.CustomerInfo> logOut() => (super.noSuchMethod(
        Invocation.method(
          #logOut,
          [],
        ),
        returnValue: _i4.Future<_i2.CustomerInfo>.value(_FakeCustomerInfo_1(
          this,
          Invocation.method(
            #logOut,
            [],
          ),
        )),
      ) as _i4.Future<_i2.CustomerInfo>);

  @override
  void setCustomerInfoUpdateListener() => super.noSuchMethod(
        Invocation.method(
          #setCustomerInfoUpdateListener,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<_i2.CustomerInfo> getCustomerInfo() => (super.noSuchMethod(
        Invocation.method(
          #getCustomerInfo,
          [],
        ),
        returnValue: _i4.Future<_i2.CustomerInfo>.value(_FakeCustomerInfo_1(
          this,
          Invocation.method(
            #getCustomerInfo,
            [],
          ),
        )),
      ) as _i4.Future<_i2.CustomerInfo>);

  @override
  _i4.Future<_i2.Offerings> getOfferings() => (super.noSuchMethod(
        Invocation.method(
          #getOfferings,
          [],
        ),
        returnValue: _i4.Future<_i2.Offerings>.value(_FakeOfferings_2(
          this,
          Invocation.method(
            #getOfferings,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Offerings>);
}
